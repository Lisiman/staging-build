{"version":3,"sources":["store/reducers/auth.js","store/reducers/index.js","store/persisted.store.js","util/session.js","store/index.js","config/firebaseConfig.js","pages/HomePage.jsx","store/actions/auth.js","config/authenticatedEmail.js","pages/SignIn.jsx","pages/NewProject.jsx","routes/Router.js","pages/ProjectDetails.jsx","routes/AppRouter.js","pages/_app.js","serviceWorker.js","index.js"],"names":["initialState","isAuthenticated","jwtToken","user","combineReducers","auth","state","action","type","payload","jwt","saveState","strState","JSON","stringify","localStorage","setItem","setAuthData","err","persistedState","AuthData","getItem","parse","getAuthData","composedEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","reducers","subscribe","getState","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","databaseURL","functions","useFunctionsEmulator","analytics","firebaseAuth","fStore","database","firestore","fStorage","storage","google","FacebookAuthProvider","GoogleAuthProvider","HomePage","useState","projectList","setProjectList","dispatch","useSelector","uid","useDispatch","useEffect","collection","orderBy","onSnapshot","snap","info","docs","forEach","doc","push","data","id","console","log","className","style","textAlign","onClick","background","color","padding","borderRadius","marginRight","marginTop","cursor","history","src","alt","paddingBottom","paddingTop","map","project","key","display","justifyContent","marginBottom","paddingRight","Link","textTransform","to","name","Signin","signInWithPopup","then","res","email","authenticatedEmail","includes","toast","success","warn","catch","error","alignItems","margin","GoogleOutlined","fontSize","NewProject","loading","setLoading","files","userData","setUserData","onChange","e","target","value","onSubmit","preventDefault","fileUploader","fileDetails","uploadZip","zipUrl","password","owner","createdAt","Date","now","add","message","disabled","confirm_password","spinning","position","i","length","height","width","opacity","accept","multiple","placeholder","Password","Promise","resolve","reject","zip","JSZip","item","file","generateAsync","content","ref","put","on","spanshot","child","getDownloadURL","url","filesDetails","flag","size","updalodedAt","Auth","path","exact","component","Public","match","visibleSlider","setVisibleSlider","imageUrls","setImageUrls","photoIndex","setPhotoIndex","visible","setVisible","setPassword","setProject","projectName","setProjectName","params","exists","getProjectNameByID","onClose","Object","keys","required","where","FieldPath","documentId","Array","isArray","itm","right","href","download","text","onCopy","idx","maxWidth","marginLeft","placement","closeIcon","enableZoom","mainSrc","nextSrc","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","Private","AuthRoute","lazy","PrivateRoute","createBrowserHistory","AppRouter","Router","fallback","Switch","R","k","Route","configure","CustomApp","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b3b8d0b8.chunk.js","sourcesContent":["// Authentication Constant\r\nexport const LOGIN_USER = \"LOGIN_USER\";\r\nexport const LOGOUT_USER = \"LOGOUT_USER\";\r\nexport const UPDATE_USER_PROFILE = \"UPDATE_USER_PROFILE\";\r\n// Company Profile\r\nexport const UPDATE_SUBSCRIBE_PROFILE = \"UPDATE_SUBSCRIBE_PROFILE\";\r\nexport const ADD_NEW_MEMBERSHIP = \"ADD_NEW_MEMBERSHIP\";\r\nexport const UPDATE_MYCOMMODITY = \"UPDATE_MYCOMMODITY\";\r\nexport const ADD_DEVICE_TOKEN = \"ADD_DEVICE_TOKEN\";\r\nexport const UPDATE_SUBSCRIBER_PACKAGE = \"UPDATE_SUBSCRIBER_PACKAGE\";\r\n\r\nconst initialState = {\r\n  isAuthenticated: null,\r\n  jwtToken: null,\r\n  user: {},\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case LOGOUT_USER: {\r\n      return initialState;\r\n    }\r\n    case LOGIN_USER: {\r\n      state = {\r\n        isAuthenticated: !!payload.jwt,\r\n        jwtToken: payload.jwt,\r\n        user: payload,\r\n      };\r\n      return state;\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\n\r\nexport default combineReducers({\r\n  auth,\r\n});\r\n","import { getAuthData, setAuthData } from \"../util/session\";\r\n\r\nexport const saveState = state => {\r\n  try {\r\n    // Parsing auth data from Redux store\r\n    let stateFilter = state;\r\n    setAuthData(stateFilter.auth);\r\n  } catch (err) {\r\n    // Ignore write error\r\n  }\r\n};\r\n\r\n/* Use an IIFE to export the persisted state in a variable */\r\nexport const persistedState = (() => {\r\n  try {\r\n    const auth = getAuthData();\r\n    // if (Object.keys(auth).length === 0) return undefined;\r\n    return {\r\n      auth\r\n    };\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n})();\r\n","export const USER_COOKIE = \"test-project\";\r\n\r\nexport function getAuthData() {\r\n  const AuthData = localStorage.getItem(USER_COOKIE);\r\n\r\n  if (typeof AuthData === \"string\") return JSON.parse(AuthData);\r\n  else return {};\r\n}\r\n\r\nexport function setAuthData(auth) {\r\n  const strState = JSON.stringify(auth);\r\n  localStorage.setItem(USER_COOKIE, strState);\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './reducers';\r\nimport { saveState, persistedState } from \"./persisted.store\";\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose,\r\n  middlewareEnhancer = applyMiddleware(thunk),\r\n  composedEnhancers = composeEnhancer(middlewareEnhancer);\r\n\r\n  const store = createStore(\r\n  reducers,\r\n  persistedState,\r\n  composedEnhancers\r\n);\r\n\r\n// Checking Saving User data if not available in storage\r\nstore.subscribe(() => {\r\n  saveState(store.getState())\r\n})\r\n\r\nexport default store;","import firebase, {\r\n  auth,\r\n  database,\r\n  firestore,\r\n  storage,\r\n  functions,\r\n} from \"firebase\";\r\n\r\n// const firebaseConfig = {\r\n//   apiKey: \"AIzaSyCSu1HDkwrjRIse4wnjuZpXcvWRWqLQxAc\",\r\n//   authDomain: \"staging-b2eff.firebaseapp.com\",\r\n//   projectId: \"staging-b2eff\",\r\n//   storageBucket: \"staging-b2eff.appspot.com\",\r\n//   messagingSenderId: \"1084620715806\",\r\n//   appId: \"1:1084620715806:web:11540ccf4858bf178d3b0f\",\r\n//   measurementId: \"G-C0YVDYBC6W\",\r\n// };\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDYwHs51iq0BTqPUr8YZetl-_kcrLGuR-Y\",\r\n  authDomain: \"creative-staging-site.firebaseapp.com\",\r\n  projectId: \"creative-staging-site\",\r\n  storageBucket: \"creative-staging-site.appspot.com\",\r\n  messagingSenderId: \"364348348699\",\r\n  appId: \"1:364348348699:web:f8d795122dd6a7f7c61bbe\",\r\n  databaseURL: \"https://creative-staging-site-default-rtdb.firebaseio.com\",\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.functions().useFunctionsEmulator(\"http://localhost:5050\");\r\nfirebase.analytics();\r\n\r\nexport const firebaseAuth = auth();\r\nexport const fbDatabase = database();\r\nexport const fStore = firestore();\r\nexport const fStorage = storage();\r\nexport const fFunc = functions();\r\nexport const facebook = new auth.FacebookAuthProvider();\r\nexport const google = new auth.GoogleAuthProvider();\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fStore } from \"../config\";\r\nimport { history } from \"../routes\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport { toast } from \"react-toastify\";\r\nimport { logoutUser } from \"../store/actions\";\r\n\r\nexport const HomePage = () => {\r\n  const [projectList, setProjectList] = useState([]);\r\n  const uid = useSelector((state) => state?.auth?.user?.uid || \"\");\r\n  const dispatch = useDispatch();\r\n  const onLogout = () => {\r\n    dispatch(logoutUser());\r\n  };\r\n  \r\n  const getProjectList = () => {\r\n    let projectsRef = fStore\r\n      .collection(\"projects\")\r\n      .orderBy(\"createdAt\", \"desc\");\r\n\r\n    projectsRef.onSnapshot((snap) => {\r\n      const info = [];\r\n      snap.docs.forEach((doc) => {\r\n        info.push({ ...doc.data(), id: doc.id });\r\n      });\r\n      setProjectList(info);\r\n      console.log(info);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    getProjectList();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"login-bg\">\r\n        <div style={{ textAlign: \"right\" }}>\r\n          <button\r\n            onClick={onLogout}\r\n            style={{\r\n              background: \"#000\",\r\n              color: \"#fff\",\r\n              padding: \"10px 20px\",\r\n              borderRadius: \"5px\",\r\n              marginRight: \"20px\",\r\n              marginTop: \"20px\",\r\n            }}\r\n          >\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"reg-box-main\" id=\"main-page-box\">\r\n        <div className=\"main-inside\">\r\n          <div className=\"flex\">\r\n            <div\r\n              className=\"flex-main-title\"\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => {\r\n                history.push(\"/new\");\r\n              }}\r\n            >\r\n              <img id=\"submit-btn-main\" src=\"img/upload-btn.svg\" alt=\"\" />\r\n              <p className=\"title-font\">Submit New Project</p>\r\n              {/* <!-- <button  className=\"btns main-page-btn\" id=\"submit-btn-main\">Submit New</button> --> */}\r\n            </div>\r\n          </div>\r\n          <div className=\"list-section\">\r\n            <p className=\"title-font-view \">View Projects</p>\r\n            <ul\r\n              id=\"main-project-list\"\r\n              style={{ paddingBottom: \"20px\", paddingTop: \"25px\" }}\r\n            >\r\n              {projectList.map((project) => (\r\n                <li key={project.id}>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      marginBottom: \"15px\",\r\n                      paddingRight: \"10px\",\r\n                    }}\r\n                  >\r\n                    <Link\r\n                      style={{\r\n                        color: \"#fff\",\r\n                        padding: 0,\r\n                        display: \"inline-block\",\r\n                        textTransform: \"capitalize\",\r\n                      }}\r\n                      to={`/project-details/${project.id}`}\r\n                    >\r\n                      {project.name}\r\n                    </Link>\r\n                    {/* <CopyToClipboard\r\n                      text={`http://localhost:3000/project-details/${project.id}`}\r\n                      onCopy={() => {\r\n                        toast(\"Project link is copied.\");\r\n                      }}\r\n                    >\r\n                      <button\r\n                        style={{\r\n                          background: \"#fff\",\r\n                          color: \"#000\",\r\n                          padding: \"12px 19px\",\r\n                          height: \"unset\",\r\n                          width: \"unset\",\r\n                        }}\r\n                        id=\"share-btn\"\r\n                      >\r\n                        Copy link\r\n                      </button>\r\n                    </CopyToClipboard> */}\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import { LOGOUT_USER, LOGIN_USER } from \"../reducers/auth\";\r\n\r\nexport const loginUser = (payload) => ({\r\n  type: LOGIN_USER,\r\n  payload,\r\n});\r\n\r\nexport const logoutUser = () => ({\r\n  type: LOGOUT_USER,\r\n});\r\n","export default [\"spelkonen@squarespace.com\", \"sili@squarespace.com\",\"kflynn@squarespace.com\"];\r\n","// import { notification } from \"antd\";\r\nimport React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { firebaseAuth, google } from \"../config\";\r\nimport { loginUser } from \"../store/actions\";\r\nimport { GoogleOutlined } from \"@ant-design/icons\";\r\nimport authenticatedEmail from \"../config/authenticatedEmail\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Signin = () => {\r\n  const dispatch = useDispatch();\r\n  const onGoogleAuth = () => {\r\n    firebaseAuth\r\n      .signInWithPopup(google)\r\n      .then((res) => {\r\n        console.log(res);\r\n        const email = res.user.email;\r\n        if (!authenticatedEmail.includes(email)) {\r\n          toast.warn(\"Please ask invite\");\r\n        } else {\r\n          toast.success(\"you are logged in.\");\r\n          dispatch(\r\n            loginUser({\r\n              email,\r\n              jwt: res.user.uid,\r\n              uid: res.user.uid,\r\n            })\r\n          );\r\n        }\r\n      })\r\n      .catch(function (error) {});\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"login-bg\"></div>\r\n      <div className=\"reg-box-main\" id=\"main-page-box\">\r\n        <div className=\"main-inside\">\r\n        <div className=\"flex-main-titl\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btns\"\r\n                id=\"submit-btn\"\r\n                onClick={onGoogleAuth}\r\n                style={{\r\n                  textTransform: \"uppercase\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  margin:\"0\"\r\n                }}\r\n              >\r\n                <GoogleOutlined\r\n                  style={{ fontSize: \"25px\", marginRight: \"5px\" }}\r\n                />{\" \"}\r\n                Log in with Google\r\n              </button>\r\n              {/* <Link\r\n                style={{\r\n                  marginTop: \"20px\",\r\n                  display: \"block\",\r\n                  textAlign: \"right\",\r\n                }}\r\n                to=\"/signup\"\r\n              >\r\n                Create account?\r\n              </Link> */}\r\n            </div>\r\n          {/* <div className=\"flex3\" style={{ padding: \"30px\" }}>\r\n\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import { Spin } from \"antd\";\r\nimport JSZip from \"jszip\";\r\nimport React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { fStorage, fStore } from \"../config\";\r\nimport { history } from \"../routes\";\r\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\r\n\r\nconst NewProject = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [userData, setUserData] = useState({ files: [] });\r\n  const uid = useSelector((state) => state?.auth?.user?.uid || \"\");\r\n  console.log(uid);\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData({ ...userData, [name]: value });\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    setLoading(true);\r\n    e.preventDefault();\r\n    try {\r\n      const fileDetails = await fileUploader(userData?.files || []);\r\n      const zipUrl = await uploadZip(userData?.files, userData.name);\r\n      console.log(zipUrl);\r\n      // return;\r\n      const payload = {\r\n        fileDetails,\r\n        zipUrl,\r\n        name: userData.name,\r\n        password: userData.password,\r\n        owner: uid,\r\n        createdAt: Date.now(),\r\n      };\r\n      await fStore\r\n        .collection(\"projects\")\r\n        .add(payload)\r\n        .then(function (res) {\r\n          console.log(res);\r\n          history.push(\"/home\");\r\n          toast(\"Project has been created!\");\r\n        })\r\n        .catch(function (err) {\r\n          console.log(err);\r\n          toast.warn(err.message);\r\n        });\r\n    } catch (err) {\r\n      console.log(err);\r\n      toast.warn(\"Please upload valid file or try again!\");\r\n    }\r\n    setLoading(true);\r\n  };\r\n  const onFileInput = (e) => {\r\n    let files = [];\r\n    for (let i = 0; i < e.target.files.length; i++)\r\n      files.push(e.target.files[i]);\r\n    setUserData({ ...userData, files });\r\n  };\r\n  const disabled =\r\n    !userData?.name ||\r\n    !userData?.password ||\r\n    userData?.password !== userData?.confirm_password;\r\n  return (\r\n    <>\r\n      <Spin spinning={loading}>\r\n        <div className=\"login-bg\"></div>\r\n        <div className=\"reg-box\">\r\n          <form\r\n            action=\"\"\r\n            // ref=\"formReg\"\r\n            id=\"reg-form\"\r\n          >\r\n            <div className=\"upload-div\" style={{ position: \"relative\" }}>\r\n              <input\r\n                onChange={onFileInput}\r\n                style={{\r\n                  position: \"absolute\",\r\n                  height: \"100%\",\r\n                  width: \"100%\",\r\n                  opacity: 0,\r\n                }}\r\n                type=\"file\"\r\n                name=\"file\"\r\n                id=\"upload-input\"\r\n                accept=\"image/*\"\r\n                multiple\r\n              />\r\n              <img\r\n                className=\"btns\"\r\n                id=\"upload-btn\"\r\n                src=\"/img/upload-btn.svg\"\r\n                alt=\"\"\r\n              />\r\n              <div className=\"upload-text\" id=\"upload-des\">\r\n                <p className=\"title-font\">Upload files</p>\r\n                <p className=\"sub-title-font\">or select a folder</p>\r\n                <p id=\"chosen-image-text\"></p>\r\n              </div>\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Project name\"\r\n              id=\"project-name\"\r\n              name=\"name\"\r\n              value={userData.name}\r\n              onChange={onChange}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password*\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              value={userData.Password}\r\n              onChange={onChange}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Repeat password*\"\r\n              id=\"confirm_password\"\r\n              name=\"confirm_password\"\r\n              value={userData.confirm_password}\r\n              onChange={onChange}\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btns\"\r\n              id=\"submit-btn\"\r\n              disabled={disabled}\r\n              onClick={onSubmit}\r\n            >\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div id=\"progress-div\"></div>\r\n      </Spin>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewProject;\r\n\r\nconst uploadZip = (files, name) => {\r\n  return new Promise((resolve, reject) => {\r\n    var zip = new JSZip();\r\n    files.map((item) => {\r\n      zip.file(item.name, item);\r\n    });\r\n    zip.generateAsync({ type: \"blob\", name: \"All qrCode\" }).then((content) => {\r\n      console.log(content);\r\n      const uploadTask = fStorage.ref(`files/${name}.zip`).put(content);\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (spanshot) => {\r\n\r\n        },\r\n        (err) => {\r\n          reject(err);\r\n        },\r\n        () => {\r\n          fStorage\r\n            .ref(\"files\")\r\n            .child(`${name}.zip`)\r\n            .getDownloadURL()\r\n            .then((url) => {\r\n              resolve(url);\r\n            });\r\n        }\r\n      );\r\n    });\r\n  });\r\n};\r\n\r\nconst fileUploader = (files) =>\r\n  new Promise((resolve, reject) => {\r\n    console.log(files);\r\n    if (files.length === 0) resolve([]);\r\n    const filesDetails = [];\r\n    let flag = true;\r\n    for (let i = 0; i < files.length; i++) {\r\n      const uploadTask = fStorage.ref(`files/${files[i].name}`).put(files[i]);\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (spanshot) => {\r\n          // const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n          // console.log('Upload is ' + progress + '% done');\r\n        },\r\n        // eslint-disable-next-line no-loop-func\r\n        (err) => {\r\n          if (err) {\r\n            reject(\"Files not uploaded\");\r\n            flag = false;\r\n          }\r\n        },\r\n        // eslint-disable-next-line no-loop-func\r\n        () => {\r\n          fStorage\r\n            .ref(\"files\")\r\n            .child(files[i].name)\r\n            .getDownloadURL()\r\n            .then((url) => {\r\n              filesDetails.push({\r\n                url,\r\n                name: files[i].name,\r\n                size: files[i].size,\r\n                updalodedAt: Date.now(),\r\n              });\r\n              if (filesDetails.length === files.length) resolve(filesDetails);\r\n            });\r\n        }\r\n      );\r\n      if (!flag) break;\r\n    }\r\n  });\r\n","import { HomePage, NewProject, ProjectDetails, Signin } from \"../pages\";\r\n\r\n// Login or Sign in Routes\r\nexport const Auth = [\r\n  { path: \"/\", exact: true, component: Signin },\r\n  // { path: \"/signup\", exact: true, component: Signup },\r\n];\r\n\r\n// Public Routes\r\nexport const Public = [\r\n  {\r\n    path: \"/project-details/:projectId\",\r\n    exact: true,\r\n    component: ProjectDetails,\r\n  },\r\n];\r\n\r\n// Private Routes\r\nexport const Private = [\r\n  { path: \"/home\", exact: true, component: HomePage },\r\n  { path: \"/new\", exact: true, component: NewProject },\r\n];\r\n\r\nexport const Personal = [];\r\n","import { firestore } from \"firebase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { fStore } from \"../config\";\r\nimport { Drawer, Modal, Spin } from \"antd\";\r\nimport { toast } from \"react-toastify\";\r\nimport CopyToClipboard from \"react-copy-to-clipboard\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Slider from \"react-slick\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\n\r\nconst ProjectDetails = ({ match }) => {\r\n  const [visibleSlider, setVisibleSlider] = useState(false);\r\n  const [imageUrls, setImageUrls] = useState([]);\r\n  const [photoIndex, setPhotoIndex] = useState(0);\r\n  const [visible, setVisible] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [password, setPassword] = useState({});\r\n  const [project, setProject] = useState({});\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [projectList, setProjectList] = useState([]);\r\n  const projectId = match.params.projectId;\r\n\r\n  var settings = {\r\n    dots: false,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n  };\r\n  const getProjectList = () => {\r\n    let projectsRef = fStore\r\n      .collection(\"projects\")\r\n      .orderBy(\"createdAt\", \"desc\");\r\n\r\n    projectsRef.onSnapshot((snap) => {\r\n      const info = [];\r\n      snap.docs.forEach((doc) => {\r\n        info.push({ ...doc.data(), id: doc.id });\r\n      });\r\n      setProjectList(info);\r\n      console.log(info);\r\n    });\r\n  };\r\n\r\n  const getProjectNameByID = () => {\r\n    setLoading(true);\r\n    try {\r\n      fStore\r\n        .collection(\"projects\")\r\n        .doc(projectId)\r\n        .onSnapshot((snap) => {\r\n          if (snap.exists) {\r\n            setProjectName(snap.data().name);\r\n          }\r\n        });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const getProjectByID = (e) => {\r\n    setLoading(true);\r\n    if (e) {\r\n      e.preventDefault();\r\n    }\r\n    try {\r\n      fStore\r\n        .collection(\"projects\")\r\n        .where(firestore.FieldPath.documentId(), \"==\", projectId)\r\n        .where(\"password\", \"==\", password)\r\n        .onSnapshot((snap) => {\r\n          console.log(snap);\r\n          if (\r\n            Array.isArray(snap.docs) &&\r\n            snap.docs.length > 0 &&\r\n            snap.docs[0].exists\r\n          ) {\r\n            setProject({ ...snap.docs[0].data() });\r\n\r\n            setImageUrls(\r\n              snap.docs[0].data()?.fileDetails?.map((itm) => itm?.url)\r\n            );\r\n          } else {\r\n            toast.warn(\"Password mismatched.\");\r\n          }\r\n        });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  useEffect(() => {\r\n    getProjectNameByID();\r\n    // getProjectByID();\r\n    getProjectList();\r\n  }, [projectId]);\r\n\r\n  const showDrawer = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const onClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  console.log(imageUrls);\r\n  if (Object.keys(project).length === 0)\r\n    return (\r\n      <Spin spinning={loading}>\r\n        <div className=\"login-bg\"></div>\r\n        <div className=\"reg-box\" id=\"log-form-div\">\r\n          <form action=\"\" id=\"log-form\">\r\n            <p className=\"project-text-grey\" id=\"login-text\">\r\n              LOG IN TO REVIEW\r\n            </p>\r\n            <p className=\"title-font\" id=\"log-title\">\r\n              {projectName}\r\n            </p>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"1\"\r\n              id=\"login-password\"\r\n              required\r\n              value={password || \"\"}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btns\"\r\n              id=\"login-btn\"\r\n              disabled={!password}\r\n              onClick={getProjectByID}\r\n            >\r\n              Log in\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </Spin>\r\n    );\r\n  return (\r\n    <Spin spinning={loading}>\r\n      <div className=\"project_details_header\">\r\n        <img src=\"/img/squarespace-logo-horizontal-black.jpg\" alt=\"\" />\r\n        <h2 className=\"all_project_header_text\" onClick={showDrawer}>\r\n          All Projects\r\n        </h2>\r\n      </div>\r\n      <div id=\"projects-section\">\r\n        <div className=\"project-display\">\r\n          <p className=\"project-text-grey\">Project</p>\r\n          <div className=\"project-des\">\r\n            <p id=\"project-title-text\">{project?.name}</p>\r\n            <div\r\n              id=\"download-section\"\r\n              style={{ display: \"flex\", alignItems: \"center\", right: \"0\" }}\r\n            >\r\n              <a href={project.zipUrl} download>\r\n                <img src=\"/img/download.svg\" alt=\"\" />\r\n                <p\r\n                  style={{\r\n                    color: \"#000\",\r\n                    marginRight: \"15px\",\r\n                    marginBottom: \"0\",\r\n                  }}\r\n                >\r\n                  Dowload assets\r\n                </p>\r\n              </a>\r\n              <CopyToClipboard\r\n                text={`http://localhost:3000/project-details/${projectId}`}\r\n                onCopy={() => {\r\n                  toast.success(\"Project link is copied.\");\r\n                }}\r\n              >\r\n                <button id=\"share-btn\">Share link</button>\r\n              </CopyToClipboard>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"detail-line\"></div>\r\n          <div id=\"project-images\">\r\n            {project?.fileDetails?.length === 0 && (\r\n              <p className=\"no_image\">No image to preview</p>\r\n            )}\r\n            {project?.fileDetails?.map(({ name, url, updalodedAt }, idx) => (\r\n              <div\r\n                style={{\r\n                  marginTop: \"20px\",\r\n                }}\r\n                key={idx}\r\n              >\r\n                <img\r\n                  onClick={() => setVisibleSlider(true)}\r\n                  id={url}\r\n                  src={url}\r\n                  alt={name}\r\n                  key={updalodedAt}\r\n                  style={{\r\n                    maxWidth: \"100%\",\r\n                  }}\r\n                />\r\n                <CopyToClipboard\r\n                  text={name}\r\n                  onCopy={() => {\r\n                    toast.success(\"Project name is copied.\");\r\n                  }}\r\n                >\r\n                  <p\r\n                    style={{ marginTop: \"10px\", cursor: \"pointer\" }}\r\n                    className=\"d-flex align-items-center\"\r\n                  >\r\n                    <img src=\"/img/images.png\" width=\"28\" />\r\n                    <span style={{ marginLeft: \"10px\" }}>{name}</span>\r\n                  </p>\r\n                </CopyToClipboard>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Drawer\r\n        // title=\"Project list\"\r\n        className=\"project_drawer\"\r\n        placement=\"right\"\r\n        onClose={onClose}\r\n        closeIcon={null}\r\n        visible={visible}\r\n      >\r\n        <span className=\"close_btn\" onClick={onClose}>\r\n          Close <img src=\"/img/close-btn.svg\" alt=\"\" />\r\n        </span>\r\n        <h2 className=\"all_project_header\">All Projects</h2>\r\n        {projectList.map(({ name, id }) => (\r\n          <Link\r\n            to={`/project-details/${id}`}\r\n            className=\"project_link\"\r\n            onClick={() => {\r\n              setProject({});\r\n            }}\r\n            key={id}\r\n          >\r\n            {name}\r\n          </Link>\r\n        ))}\r\n      </Drawer>\r\n      {/* <Modal\r\n        visible={visibleSlider}\r\n        onCancel={() => setVisibleSlider(false)}\r\n        footer={false}\r\n        // className=\"image_modal\"\r\n        // style={{ width: \"100vh\" }}\r\n      >\r\n        <Slider {...settings}>\r\n          {project?.fileDetails?.map(({ url }) => (\r\n            <div>\r\n              <img src={url} alt=\"\" />\r\n            </div>\r\n          ))}\r\n        </Slider>\r\n      </Modal> */}\r\n      {visibleSlider && imageUrls?.length > 0 && (\r\n        <Lightbox\r\n          enableZoom={false}\r\n          mainSrc={imageUrls[photoIndex]}\r\n          nextSrc={imageUrls[(photoIndex + 1) % imageUrls.length]}\r\n          prevSrc={\r\n            imageUrls[(photoIndex + imageUrls.length - 1) % imageUrls.length]\r\n          }\r\n          onCloseRequest={() => setVisibleSlider(false)}\r\n          onMovePrevRequest={() => {\r\n            console.log(imageUrls);\r\n            setPhotoIndex(\r\n              (photoIndex + imageUrls.length - 1) % imageUrls.length\r\n            );\r\n          }}\r\n          onMoveNextRequest={() =>\r\n            setPhotoIndex((photoIndex + 1) % imageUrls.length)\r\n          }\r\n        />\r\n      )}\r\n    </Spin>\r\n  );\r\n};\r\n\r\nexport default ProjectDetails;\r\n","/* eslint-disable react/jsx-no-undef */\r\nimport React, { Suspense, lazy } from \"react\";\r\nimport { createBrowserHistory } from \"history\";\r\n// import { Router, Routes, Route } from \"react-router-dom\";\r\nimport {  Router, Switch, Route } from \"react-router-dom\";\r\n\r\n// Index Routes\r\nimport { Auth, Private, Public } from \"./Router\";\r\n\r\n// Routes\r\nconst AuthRoute = lazy(() => import(\"./AuthRoute\"));\r\nconst PrivateRoute = lazy(() => import(\"./PrivateRoute\"));\r\n\r\n// Components\r\nexport const history = createBrowserHistory();\r\n\r\nconst RouterConfig = () => {\r\n  return (\r\n    <Router history={history}>\r\n      <Suspense fallback={<p>Loading</p>}>\r\n        <Switch>\r\n          {Public.map((R, k) => {\r\n            return <Route key={k} {...R} />;\r\n          })}\r\n          {Private.map((R, k) => {\r\n            return <PrivateRoute key={k} {...R} />;\r\n          })}\r\n          {Auth.map((R, k) => {\r\n            return <AuthRoute key={k} {...R} />;\r\n          })}\r\n          {/* <Route component={Error} /> */}\r\n        </Switch>\r\n      </Suspense>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport const AppRouter = RouterConfig;\r\n","import React from \"react\";\r\nimport store from \"../store\";\r\nimport { Provider } from \"react-redux\";\r\nimport AppRouter from \"../routes\";\r\nimport { toast } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css'\r\nimport \"antd/dist/antd.css\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\ntoast.configure()\r\n\r\nconst CustomApp = () => (\r\n  <Provider store={store}>\r\n    <AppRouter />\r\n  </Provider>\r\n);\r\n\r\nexport default CustomApp;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType !== null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./pages/_app\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// firebase.initializeApp(firebaseConfig)\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}